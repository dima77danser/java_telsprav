import java.time.LocalTime;
import java.util.Arrays;
import java.util.Locale;
import java.util.Scanner;

//public class sem1 {
//    public static void main(String[] args){
//        System.out.println("–∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?");
//        Scanner sc = new Scanner(System.in);
//        String name = sc.nextLine();
//        System.out.println("–ü—Ä–∏–≤–µ—Ç"+ name);
//    }
//}


//–ó–∞–¥–∞–Ω–∏–µ No1+
//        üìå –í –∫–æ–Ω—Å–æ–ª–∏ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, –≤—ã–≤–µ—Å—Ç–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤–∏–¥–∞
//üìå "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, <–ò–º—è>!", –µ—Å–ª–∏ –≤—Ä–µ–º—è –æ—Ç 05:00 –¥–æ 11:59
//        üìå "–î–æ–±—Ä—ã–∏ÃÜ –¥–µ–Ω—å, <–ò–º—è>!", –µ—Å–ª–∏ –≤—Ä–µ–º—è –æ—Ç 12:00 –¥–æ 17:59;
//        üìå "–î–æ–±—Ä—ã–∏ÃÜ –≤–µ—á–µ—Ä, <–ò–º—è>!", –µ—Å–ª–∏ –≤—Ä–µ–º—è –æ—Ç 18:00 –¥–æ 22:59;
//        üìå "–î–æ–±—Ä–æ–∏ÃÜ –Ω–æ—á–∏, <–ò–º—è>!", –µ—Å–ª–∏ –≤—Ä–µ–º—è –æ—Ç 23:00 –¥–æ 4:59

public class sem1 {
    public static void main(String[] args) {
        System.out.println(task4(2,-3));     //–º–µ–Ω—è—Ç—å –º–µ—Ç–æ–¥—ã –∑–¥–µ—Å—å, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∑–∞–¥–∞–Ω–∏—è /task3("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –∫—É—Ä—Å –ø–æ Java")
    }

//    static void task() {
//        System.out.println("–∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?");
//        Scanner sc = new Scanner(System.in);
//        String name = sc.nextLine();
//        LocalTime localTime = LocalTime.now();
//        int hour = localTime.getHour();
//        if (hour >= 5 && hour < 12) {
//            System.out.println("–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ" + name);
//        } else if (hour < 18) {
//            System.out.println("–¥–æ–±—Ä—ã–π –¥–µ–Ω—å" + name);
//        } else if (hour < 23) {
//            System.out.println("–¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä" + name);
//        } else {
//            System.out.println("–¥–æ–±—Ä–æ–π –Ω–æ—á–∏" + name);
//        }
//    }



//    static void task1(){
//        //    –ó–∞–¥–∞–Ω–∏–µ No2
////üìå –î–∞–Ω –º–∞—Å—Å–∏–≤ –¥–≤–æ–∏—á–Ω—ã—Ö —á–∏—Å–µ–ª, –Ω–∞–ø—Ä–∏–º–µ—Ä [1,1,0,1,1,1],
////    –≤—ã–≤–µ—Å—Ç–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥—Ä—è–¥ –∏–¥—É—â–∏—Ö 1.
//        int[] arr = {1,0,1,1,0,1,1,1,1};
//        int count = 0;
//        int maxones = 0;
//        for (int i =0; i<arr.length; i++){
//            if (arr[i]==1) count++;
//            else {
//                if (maxones <count){
//                    maxones=count;
//                }
//                count =0;
//            }
//        }
//        if (maxones <count){
//            maxones=count;
//        }
//        System.out.println(maxones);
//    }

   // static void task2(){
//        –ó–∞–¥–∞–Ω–∏–µ No3
//üìå –î–∞–Ω –º–∞—Å—Å–∏–≤ nums = [3,2,2,3] –∏ —á–∏—Å–ª–æ val = 3.
//üìå –ï—Å–ª–∏ –≤ –º–∞—Å—Å–∏–≤–µ –µ—Å—Ç—å —á–∏—Å–ª–∞, —Ä–∞–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–Ω–æ–º—É, –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏
//        —ç—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞.
//üìå –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ (–∏–ª–∏ –≤—Å–µ) —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞
// –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—Ç–ª–∏—á–Ω—ã –æ—Ç –∑–∞–¥–∞–Ω–Ω–æ–≥–æ, –∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ - —Ä–∞–≤–Ω—ã –µ–º—É.
//       int[] nums = {3,2,1,3,7,3};
//       int val = 3;
//       int[] tempArr = new int[nums.length];
//       Arrays.fill(tempArr,val); // —Å–æ–∑–¥–∞—é –º–∞—Å—Å–∏–≤ —Å–æ –≤—Å–µ–º–∏ var
//       int currentInd = 0;
//       for (int i = 0; i < nums.length; i++) {
//           if (nums[i] != val) {
//               tempArr[currentInd++] = nums[i];
//           }
//       }
//       System.out.println((Arrays.toString(tempArr))); //–ø–µ—Ä–µ–≤–æ–∂—É –º–∞—Å—Å–∏–≤ –≤ –Ω–æ—Ä–º—É
//    }

//    static void task3(String str) {
////        –ó–∞–¥–∞–Ω–∏–µ No5 (–¥–æ–ø)
////üìå –í–æ —Ñ—Ä–∞–∑–µ "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –∫—É—Ä—Å –ø–æ Java"
////        –ø–µ—Ä–µ—Å—Ç–∞–≤–∏—Ç—å —Å–ª–æ–≤–∞ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.
//        String[] arr = str.split(" ");
//        for (int i = arr.length-1; i >=0 ; i--) {
//            if (i !=arr.length-1) {
//                arr[i] = arr[i].toLowerCase();
//            }
//            System.out.print(arr[i]+ " ");
//        }

    static double task4(int a,int b){
//        –ó–∞–¥–∞–Ω–∏–µ No6 (–¥–æ–ø)
//üìå –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –≤–æ–∑–≤–µ–¥–µ–Ω–∏—è —á–∏—Å–ª–∞ –∞ –≤ —Å—Ç–µ–ø–µ–Ω—å b. a, b –∏–∑ Z.
// –°–≤–æ–¥—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω—è–µ–º—ã—Ö –¥–µ–∏ÃÜ—Å—Ç–≤–∏–∏ÃÜ –∫ –º–∏–Ω–∏–º—É–º—É.
//üìå –ü—Ä–∏–º–µ—Ä 1: –∞ = 3, b = 2, –æ—Ç–≤–µ—Ç: 9
//üìå –ü—Ä–∏–º–µ—Ä 2: –∞ = 2, b = -2, –æ—Ç–≤–µ—Ç: 0.25
//üìå –ü—Ä–∏–º–µ—Ä 3: –∞ = 3, b = 0, –æ—Ç–≤–µ—Ç: 1
        if (b ==0) {
            return 1;
        }
        double res = a;
        for (int i = 1; i <Math.abs(b) ; i++) {
            res*=a;
        }
        return b>0 ? res : 1/res;

    }

}